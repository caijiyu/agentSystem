package com.jeeplus.modules.agentsystem.agency.service;

import java.math.BigDecimal;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeeplus.common.persistence.Page;
import com.jeeplus.common.service.CrudService;
import com.jeeplus.modules.agentsystem.agency.dao.WasSysUserDao;
import com.jeeplus.modules.agentsystem.agency.entity.WasSysUser;




@Service
@Transactional(readOnly = true)
public class WasSysUserService extends CrudService<WasSysUserDao, WasSysUser>{
	@Autowired
	private WasSysUserDao wasSysUserDao;
	
	public WasSysUser get(String id) {
		return super.get(id);
	}
	
	public List<WasSysUser> findList(WasSysUser sysUser) {
		return super.findList(sysUser);
	}
	
	public Page<WasSysUser> findPage(Page<WasSysUser> page, WasSysUser sysUser) {
		return super.findPage(page, sysUser);
	}
	@Transactional(readOnly = false)
	public int update(WasSysUser sysUser) {
		return super.update(sysUser);
	}
	@Transactional(readOnly = false)
	public void save(WasSysUser sysUser) {
		super.save(sysUser);
	}
	
	@Transactional(readOnly = false)
	public void delete(WasSysUser sysUser) {
		super.delete(sysUser);
	}
	@Transactional(readOnly = false)
	public String agentLookUp(WasSysUser sysUser) {
		System.err.println(sysUser);
		return wasSysUserDao.angentLookUp(sysUser);
	}

	@Transactional(readOnly = false)
	public Integer updateTime(WasSysUser sysUser) {
		return wasSysUserDao.updateTime(sysUser);
	}
	@Transactional(readOnly = false)
	public Integer updateAccount(WasSysUser sysUser) {
		return wasSysUserDao.updateAccount(sysUser);
	}
	@Transactional(readOnly = false)
	public Integer updateDel(WasSysUser sysUser) {
		return wasSysUserDao.updateDelState(sysUser);
	}
	//找到当前代理商是否拥有下放代理商的权限
	@Transactional(readOnly = false)
	public Integer findDelegateAgent(String id){
		return wasSysUserDao.findDelegateAgent(id);
	}
	
	//更新对应账户金额
	@Transactional(readOnly = false)
	public  Integer updatePublicAccountAndExpend(BigDecimal publicAccount,BigDecimal publicExpend,String id){
		return wasSysUserDao.updatePublicAccountAndExpend(publicAccount, publicExpend, id);
	}
	@Transactional(readOnly = false)
	public  Integer updateMinaAccountAndExpend(BigDecimal minaAccount,BigDecimal minaExpend,String id){
		return wasSysUserDao.updateMinaAccountAndExpend(minaAccount,minaExpend,id);
	}
	@Transactional(readOnly = false)
	public  Integer updateVipAccountAndExpend(BigDecimal vipAccount,BigDecimal vipExpend,String id){
		return wasSysUserDao.updateVipAccountAndExpend(vipAccount, vipExpend, id);
	}
	@Transactional(readOnly = false)
	public  List<WasSysUser> findAllSuperAgent(){
		return wasSysUserDao.findAllSuperAgent();
	}
	@Transactional(readOnly = false)
	public  List<WasSysUser> findAllLowerAgent(WasSysUser sysUser){
		return wasSysUserDao.findAllLowerAgent(sysUser);
	}
	@Transactional(readOnly = false)
	public  WasSysUser getDirectAgent(String id){
		return wasSysUserDao.getDirectAgent(id);
	}
	

}
