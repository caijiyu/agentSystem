/**
 * Copyright &copy; 2015-2020 <a href="http://www.jeeplus.org/">JeePlus</a> All rights reserved.
 */
package com.jeeplus.modules.agentsystem.sysdata.entity;

import javax.validation.constraints.NotNull;
import org.hibernate.validator.constraints.Length;

import java.math.BigDecimal;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonFormat;

import com.jeeplus.common.persistence.DataEntity;
import com.jeeplus.common.utils.excel.annotation.ExcelField;

/**
 * 硬件管理Entity
 * @author Ricky
 * @version 2017-09-27
 */
public class WasHardware extends DataEntity<WasHardware> {
	
	private static final long serialVersionUID = 1L;
	private Integer hardwareId;		// 主键ID
	private String picture;		// 图片
	private String name;		// 名称
	private String classify;		// 分类
	private BigDecimal price;		// 价格
	private Integer sellNum;		// 卖出数量
	private Date createDay;		// 添加时间
	private String createId;		// 添加账号
	private Date updateDay;		// 更新时间
	private String updateId;		// 更新账号
	private Integer state;		// 状态（0：删除，1：正常）
	private BigDecimal hardwareAccount;   //硬件账户
	private BigDecimal vipAccount;        //VIP账户
	private BigDecimal userHardwareExpend;   //硬件消耗
	private BigDecimal userVipExpend;       //VIP消耗
	
	public WasHardware() {
		super();
	}

	public WasHardware(String id){
		super(id);
	}

	@NotNull(message="主键ID不能为空")
	@ExcelField(title="主键ID", align=2, sort=0)
	public Integer getHardwareId() {
		return hardwareId;
	}

	public void setHardwareId(Integer hardwareId) {
		this.hardwareId = hardwareId;
	}
	
	@Length(min=1, max=100, message="图片长度必须介于 1 和 100 之间")
	@ExcelField(title="图片", align=2, sort=1)
	public String getPicture() {
		return picture;
	}

	public void setPicture(String picture) {
		this.picture = picture;
	}
	
	@Length(min=1, max=50, message="名称长度必须介于 1 和 50 之间")
	@ExcelField(title="名称", align=2, sort=2)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=1, max=50, message="分类长度必须介于 1 和 50 之间")
	@ExcelField(title="分类", align=2, sort=3)
	public String getClassify() {
		return classify;
	}

	public void setClassify(String classify) {
		this.classify = classify;
	}
	
	@NotNull(message="价格不能为空")
	@ExcelField(title="价格", align=2, sort=4)
	public BigDecimal getPrice() {
		return price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}
	
	@NotNull(message="卖出数量不能为空")
	@ExcelField(title="卖出数量", align=2, sort=5)
	public Integer getSellNum() {
		return sellNum;
	}

	public void setSellNum(Integer sellNum) {
		this.sellNum = sellNum;
	}
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@NotNull(message="添加时间不能为空")
	@ExcelField(title="添加时间", align=2, sort=6)
	public Date getCreateDay() {
		return createDay;
	}

	public void setCreateDay(Date createDay) {
		this.createDay = createDay;
	}
	
	@Length(min=1, max=64, message="添加账号长度必须介于 1 和 64 之间")
	@ExcelField(title="添加账号", align=2, sort=7)
	public String getCreateId() {
		return createId;
	}

	public void setCreateId(String createId) {
		this.createId = createId;
	}
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@NotNull(message="更新时间不能为空")
	@ExcelField(title="更新时间", align=2, sort=8)
	public Date getUpdateDay() {
		return updateDay;
	}

	public void setUpdateDay(Date updateDay) {
		this.updateDay = updateDay;
	}
	
	@Length(min=1, max=64, message="更新账号长度必须介于 1 和 64 之间")
	@ExcelField(title="更新账号", align=2, sort=9)
	public String getUpdateId() {
		return updateId;
	}

	public void setUpdateId(String updateId) {
		this.updateId = updateId;
	}
	
	@NotNull(message="状态（0：删除，1：正常）不能为空")
	@ExcelField(title="状态（0：删除，1：正常）", align=2, sort=10)
	public Integer getState() {
		return state;
	}

	public void setState(Integer state) {
		this.state = state;
	}

	public BigDecimal getHardwareAccount() {
		return hardwareAccount;
	}

	public void setHardwareAccount(BigDecimal hardwareAccount) {
		this.hardwareAccount = hardwareAccount;
	}

	public BigDecimal getVipAccount() {
		return vipAccount;
	}

	public void setVipAccount(BigDecimal vipAccount) {
		this.vipAccount = vipAccount;
	}

	public BigDecimal getUserHardwareExpend() {
		return userHardwareExpend;
	}

	public void setUserHardwareExpend(BigDecimal userHardwareExpend) {
		this.userHardwareExpend = userHardwareExpend;
	}

	public BigDecimal getUserVipExpend() {
		return userVipExpend;
	}

	public void setUserVipExpend(BigDecimal userVipExpend) {
		this.userVipExpend = userVipExpend;
	}

	
	
}