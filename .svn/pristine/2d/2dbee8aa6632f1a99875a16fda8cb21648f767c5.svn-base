<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.agentsystem.agency.dao.WasConsumeSynthesisDao">
    
    <sql id="WasConsumeSynthesisColumns">
		a.orderNo AS "orderNo",                
		a.behavior AS "behavior",                
		a.payMoney AS "payMoney",        
		a.type AS "type",        
		a.createDate AS "createDate",            
		a.userId AS "userId",   
		u.login_name AS "loginName"            
							 
	</sql>
	<sql id="wasExpendPayColumns">
		a.orderNo AS orderNo,
		a.behavior AS behavior,
		a.payMoney AS payMoney,
		a.publicExpend AS publicExpend,
		a.minaExpend AS minaExpend,
		a.hardwareExpend AS hardwareExpend,
		a.vipExpend AS vipExpend,
		a.type AS type,
		a.remarks AS remarks,
		a.createDate AS createDate,
		a.state AS state,
		b.login_name AS loginName,
		a.userId AS userId
	</sql>
	
	<sql id="wasHardwarePurchaseColumns">
		c.orderNo AS orderNo,
		c.behavior AS behavior,
		c.payMoney AS payMoney,
		c.publicExpend AS publicExpend,
		c.minaExpend AS minaExpend,
		c.hardwareExpend AS hardwareExpend,
		c.vipExpend AS vipExpend,
		c.type AS type,
		c.remarks AS remarks,
		c.createDate AS createDate,
		c.state AS state,
		d.login_name AS loginName,  
		c.userId AS userId
	</sql>
	
	<sql id="wasPolicyPurchaseColumns">
		e.number AS orderNo,
		e.behavior AS behavior,
		e.payMoney AS payMoney,
		e.publicExpend AS publicExpend,
		e.minaExpend AS minaExpend,
		e.hardwareExpend AS hardwareExpend,
		e.vipExpend AS vipExpend,
		e.type AS type,
		e.remarks AS remarks,
		e.createDate AS createDate,
		e.state AS state,
		f.login_name AS loginName,
		g.parentId AS userId
	</sql>
    <sql id="WasConsumeSynthesisJoins">
    	LEFT JOIN sys_user u ON u.id = a.userId
    </sql>
    		
	<select id="findList" resultType="WasConsumeSynthesis">
		SELECT 
			userId,orderNo,behavior,payMoney,publicExpend,minaExpend,hardwareExpend,vipExpend,type,remarks,createDate,loginName
		FROM (SELECT 
			<include refid="wasPolicyPurchaseColumns"/>
		FROM was_policy_purchase e
		LEFT JOIN sys_user f on e.userId=f.id 
		LEFT JOIN was_terminal_user g on e.terminalUserId=g.terminalUserId
		
		UNION ALL
		SELECT 
			<include refid="wasHardwarePurchaseColumns"/>
		FROM was_hardware_purchase c
		LEFT JOIN sys_user d on c.createBy=d.id
		
		UNION ALL
		SELECT 
			<include refid="wasExpendPayColumns"/>
		FROM was_expend_pay a
		LEFT JOIN sys_user b on a.createBy=b.id) allResult
		
		
		<where>
			AND userId=#{userId}  AND state=1
			<if test="orderNo != null and orderNo != ''">
				AND orderNo LIKE 
					<if test="dbName == 'oracle'">'%'||#{orderNo}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{orderNo}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{orderNo},'%')</if>
			</if>
			<if test="startDate != null and endDate != null and startDate != '' and endDate != ''">
				AND createDate BETWEEN #{startDate} AND #{endDate}
			</if>
			<if test="startDate != null  and startDate != '' and (endDate==null or endDate=='')">
				AND createDate  &gt;=  #{startDate}
			</if>
			<if test="endDate != null and endDate != '' and (startDate == null  or startDate == '')">
				AND createDate  &lt;= #{endDate}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			order by createDate DESC
			</otherwise>
		</choose>
		
	</select>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE was_recharge_history SET 
			state = 0
		WHERE rechargeId = #{rechargeId}
	</update>
	
	<!-- 更新各表中对应的开票状态 -->
	<update id="updateInvoiceY" parameterType="WasConsumeSynthesis">
		 UPDATE was_hardware_purchase SET	invoice = #{invoice} WHERE invoiceNo = #{invoiceNo}				 
	</update>
	<update id="updateInvoiceC" parameterType="WasConsumeSynthesis">		
		 UPDATE was_expend_pay SET	 invoice = #{invoice} WHERE invoiceNo = #{invoiceNo}
	</update>		 
	<update id="updateInvoiceR" parameterType="WasConsumeSynthesis">		
		 UPDATE was_policy_purchase SET	 invoice = #{invoice} WHERE invoiceNo = #{invoiceNo}
	</update>
	
	
	<!-- 查询是否开过票 -->
	<select id="findForList" resultType="WasConsumeSynthesis">
		 SELECT 
			<include refid="WasConsumeSynthesisColumns"/>
		FROM (SELECT 
			number orderNo,behavior behavior,totalMoney payMoney,type type,createDate createDate,userId userId
		FROM was_policy_purchase
		<where>
			<if test="invoice != null">
				AND invoice = #{invoice}
			</if>
			 AND terminalUserId in (
			 	SELECT terminalUserId FROM was_terminal_user 
			 <where>
			 <if test="userId != null and userId != ''">
			 	parentId = #{userId}			 
			 </if>
			 </where>
			 	group by terminalUserId 
			  )
		</where>
	
		UNION ALL
		SELECT 
			orderNo orderNo,behavior behavior,payMoney payMoney,type type,createDate createDate,createBy userId
		FROM was_hardware_purchase		
		<where>
			<if test="userId != null and userId != ''">
				AND userId = #{userId} 				 
			</if>			
			<if test="invoice != null">
				AND invoice = #{invoice}
			</if> 			
		</where>
		
		UNION ALL
		SELECT 
			orderNo orderNo,behavior behavior,payMoney payMoney,type type,createDate createDate,createBy userId
		FROM was_expend_pay
		
		<where>
			<if test="userId != null and userId != ''">
				AND userId = #{userId} 				 
			</if>					
			<if test="invoice != null">
				AND invoice = #{invoice}
			</if> 
		</where> ) AS a
		
		<include refid="WasConsumeSynthesisJoins"/> 
		
	</select>
	<!-- 更新各表中的订单编号（开票单号、开票状态） -->
	<update id="updateOrderY" parameterType="WasConsumeSynthesis">
		 UPDATE was_hardware_purchase SET	invoice = #{invoice},invoiceNo = #{invoiceNo} WHERE orderNo=#{orderNo}				 
	</update>
	<update id="updateOrderC" parameterType="WasConsumeSynthesis">		
		 UPDATE was_expend_pay SET	 invoice = #{invoice},invoiceNo = #{invoiceNo} WHERE  orderNo=#{orderNo}
	</update>		 
	<update id="updateOrderR" parameterType="WasConsumeSynthesis">		
		 UPDATE was_policy_purchase SET	 invoice = #{invoice}, invoiceNo = #{invoiceNo} WHERE number=#{orderNo}
	</update>
	
	
	
	
	
</mapper>